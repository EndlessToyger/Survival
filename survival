<drac2>
args = &ARGS&

# Help setup
help = 'help survival -here'
if len(args) == 1 and args[0].lower() in ['help', '?']:
    return help

#setup the core embed
base = f'embed -title "Survival Collection Settings" -color {color} -thumb {image} -desc "Note: Active character required.\nThere are 3 core commands in this collection. `!fish`, `!hunt`, and `!forage`. The aliases are highly customizable for your needs and setting using svars and cvars/uvars. See the `!help fish/hunt/forage` for information on cvar/uvar settings. See `!survival settings` for help creating svars to replace the default data and settings" -footer "All arguments in < args > brackets are mandatory arguments and the alias won\'t work without them. Arguments in [ args ] brackets are optional."'

#setup the general field
if 'gen' in args or 'general' in args or len(args) == 0:
  base += f' -f "General|- Each alias rolls two d100 in the background, the first is compared to the settings svar to get the find DC, the second is compared to the data svar for which species is being fished/hunted/foraged\n- For each check, the alias scans a certain set of skills (unless specified otherwise) and takes the one with the highest bonus. In the case of two skills with the same bonus, the one that is alphabetically first is selected. The `Xyyy` argument forces specific skills on certain checks, and is covered in the help file. There can be multiple `Xyyy` arguments - one per check.\n- `adv`/`dis`/`-b` apply to all rolls, `guidance` automatically applied to all checks.\n- All sources and types of adv/dis cancel accurately (probably)\n- `X` can be replaced with `f`, `c`/`k`, or `h` to segregate the bonus/adv/dis to only the associated roll\n- Harvest of pounds of meat is based on a percentage of the maximum DC in settings."\n'

#setup the fish field
if 'fish' in args or len(args) == 0:
  base += f' -f "Fishing|`!fish [adv/dis] [Xadv/Xdis] [Xyyy] [-b #] [-Xb #] [guidance]`\n\n- The find check compares skills [**Animal Handling, Insight, Investigation, Nature, Perception, Survival**]. Replace `Xyyy` with one of the corresponding arguments [`fani`, `finsi`, `finv`, `fnat`, `fperc`, `fsurv`] to force use of that skill\n\n- The catch check compares the skills [**Animal Handling, Athletics, Survival**]. Replace `Xyyy` with one of the corresponding arguments [`cani`, `cath`, `csurv`] to force use of that skill\n\n- The harvest check compares skills [**Animal Handling, Medicine, Nature, Survival**]. Replace `Xyyy` with one of the corresponding arguments [`hani`, `hmed`, `hnat`, `hsurv`] to force use of that skill\n\nTurn off automatic harvesting with `!cvar fishSurvHarvesting false`"\n'

#setup the hunt field
if 'hunt' in args or len(args) == 0:
  base += f' -f "Hunting|`!hunt <large/big/small> [adv/dis/ea] [Xadv/Xdis] [Xyyy] [-b #] [-Xb #] [guidance]`\n\n- You can big game or small game. `large`/`big` are both valid for big game hunting\n\n- The find check compares skills [**Animal Handling, Athletics, Insight, Investigation, Nature, Perception, Survival**]. Replace `Xyyy` with one of the corresponding arguments [`fani`, `fath`, `finsi`, `finv`, `fnat`, `fperc`, `fsurv`] to force use of that skill\n\n- The kill check scans the active character\'s attacks for the highest bonus among attacks with [**bow, javelin, spear, trident, gun**] in their name. If no attack can be found, a general attack is used\n\n- The harvest check compares skills [**Animal Handling, Medicine, Nature, Survival**] for the maximum bonus. Replace `Xyyy` with one of the corresponding arguments [`hani`, `hmed`, `hnat`, `hsurv`] to force use of that skill\n\nTurn off automatic harvesting with `!cvar huntSurvHarvesting false`"\n'

#setup the forage field
if 'forage' in args or len(args) == 0:
  base += f' -f "Foraging|`!forage [adv/dis] [Xadv/Xdis] [Xyyy] [-b #] [-Xb #] [guidance]`\n\n- The find check compares skills [**Athletics, Insight, Investigation, Medicine, Nature, Perception, Survival**] for the maximum bonus. Replace `Xyyy` with one of the corresponding arguments [`fath`, `finsi`, `finv`, `fmed`, `fnat`, `fperc`, `fsurv`] to force use of that skill\n- The edibility/food safety check compares skills [**History, Insight, Investigation, Medicine, Nature, Survival**] for the maximum bonus. Replace `Xyyy` with one of the corresponding arguments [`chist`, `cinsi`, `cinv`, `cmed`, `cnat`, `csurv`] to force use of that skill\n- The check to harvest compares skills [**Medicine, Nature, Sleight of Hand, Survival**] for the maximum bonus. Replace `Xyyy` with one of the corresponding arguments [`hmed`, `hnat`, `hslei`, `hsurv`] to force use of that skill\n\nTurn off automatic harvesting with `!cvar forSurvHarvesting false`"'

return base
</drac2>
