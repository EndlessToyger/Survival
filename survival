<drac2>
args = &ARGS&

# Help setup
help = f'help {ctx.alias} -here'
if len(args) == 1 and args[0].lower() in '?help':
	return help

# Setup the core embed
base = f'embed -title "Survival Collection Settings" -color {color} -desc "**Note: Active character required.**\n\nThere are 3 core commands in this collection. `{ctx.prefix}fish`, `{ctx.prefix}hunt`, and `{ctx.prefix}forage`. The aliases are highly customizable for your needs and setting using svars and cvars/uvars. See the `{ctx.prefix}help <fish/hunt/forage>` for information on cvar/uvar settings. See `{ctx.prefix}survival settings [general/fish/hunt/forage]` for the default data for that alias or for help creating svars to replace the default data and settings" -footer "All arguments in < args > brackets are mandatory arguments and the aliases won\'t work without them. Arguments in [ args ] brackets are optional."'

# Setup the general field
if 'gen' in args or 'general' in args or len(args) == 0:
	base += f' -f "Random Selections|- Each alias rolls two d100 in the background, the first is compared to the settings data to get the "find" DC, the second is compared to the species data for which species is being fished/hunted/foraged. If a `[species]` was provided, the alias checks if it matches something in the data. If there is no match, the alias assumes user error and reverts to the d100 roll"'
	base += f' -f "How Checks Work|For each check, the alias scans a subset of skills (unless `Xyyy` exists and matches one of the options) and picks the one with the highest bonus. If two have the same bonus, alphabetical order prevails.\n\n-The `Xyyy` argument forces specific skills on the `X` check. There can be multiple `Xyyy` arguments (but only one per check). See help files for what you can do.\n\n- Harvest of pounds of meat is based on a percentage of the maximum DC from the settings. Minimum one pound."'
	base += f' -f "Arguments and Customizations|`adv`/`dis`/`-b` apply to all rolls, `guidance` applies only to checks.\n\n- All sources and types of adv/dis cancel accurately (probably)\n\n- `X` (as in `Xyyy` or `Xadv`) can be replaced with `f`, `c` (`k` when hunting), or `h` to segregate the bonus/adv/dis to only the associated roll\n\n- You can turn off automatic harvesting at a character level with `{ctx.prefix}cvar zzzzSurvHarvesting false`, replace zzzz with `fish`, `hunt`, or `for` to specify which alias to turn it off for. You can do this at a user level too (all characters) by swapping `var` for `uvar`."'
	base += f' -f "Learn More|Run `{ctx.prefix}survival <fish/hunt/forage>` to get information about how each of those aliases work. This embed is entirely too long too print all that information. If you really want it, you can run `{ctx.prefix}survival general fish hunt forage` to see everything"'

# Setup the fish field
if 'fish' in args:
	base += f' -f "Fishing|`{ctx.prefix}fish [adv/dis] [Xadv/Xdis] [Xyyy] [-b #] [-Xb #] [guidance] [species]`"'
	base += f' -f "Checks|- The find check compares skills [**Animal Handling, Insight, Investigation, Nature, Perception, Survival**]. `Xyyy` can be replaced with [`fani`, `finsi`, `finv`, `fnat`, `fperc`, or `fsurv`] to force use of that skill\n\n- The catch check compares the skills [**Animal Handling, Athletics, Survival**]. `Xyyy` can be replaced with [`cani`, `cath`, or `csurv`] to force use of that skill\n\n- The harvest check compares skills [**Animal Handling, Medicine, Nature, Survival**]. `Xyyy` can be replaced with [`hani`, `hmed`, `hnat`, `hsurv`] to force use of that skill"'

# Setup the hunt field
if 'hunt' in args:
	base += f' -f "Hunting|`{ctx.prefix}hunt <large/big/small/marine/aquatic> [adv/dis/ea] [Xadv/Xdis] [Xyyy] [-b #] [-Xb #] [guidance] [species]`\n\n- You can hunt big game, small game, or underwater game. `large`/`big` are both valid for big game hunting, `aquatic`/`marine` are both valid for underwater hunting"'
	base += f' -f "Checks|- The find check compares skills [**Animal Handling, Athletics, Insight, Investigation, Nature, Perception, Survival**]. `Xyyy` can be replaced with [`fani`, `fath`, `finsi`, `finv`, `fnat`, `fperc`, or `fsurv`] to force use of that skill\n\n- The kill check scans the active character\'s attacks for the highest bonus among attacks with [**bow, javelin, spear, trident, gun**] in their name. If no attack can be found, a generic attack is used\n\n- The harvest check compares skills [**Animal Handling, Medicine, Nature, Survival**] for the maximum bonus. `Xyyy` can be replaced with [`hani`, `hmed`, `hnat`, or `hsurv`] to force use of that skill"'

# Setup the forage field
if 'forage' in args:
	base += f' -f "Foraging|`{ctx.prefix}forage [adv/dis] [Xadv/Xdis] [Xyyy] [-b #] [-Xb #] [guidance] [species]`"'
	base += f' -f "Checks|- The find check compares skills [**Athletics, Insight, Investigation, Medicine, Nature, Perception, Survival**] for the maximum bonus. `Xyyy` can be replaced by [`fath`, `finsi`, `finv`, `fmed`, `fnat`, `fperc`, or `fsurv`] to force use of that skill\n\n- The edibility/food safety check compares skills [**History, Insight, Investigation, Medicine, Nature, Survival**] for the maximum bonus. `Xyyy` can be replaced by [`chist`, `cinsi`, `cinv`, `cmed`, `cnat`, or `csurv`] to force use of that skill\n\n- The check to harvest compares skills [**Medicine, Nature, Sleight of Hand, Survival**] for the maximum bonus. `Xyyy` can be replaced with [`hmed`, `hnat`, `hslei`, or `hsurv`] to force use of that skill"'

return base
</drac2>
